package org.hxzon.asn1.smv;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import org.hxzon.asn1.Asn1Utils;

import com.chaosinmotion.asn1.BerInputStream;
import com.chaosinmotion.asn1.BerNode;
import com.chaosinmotion.asn1.BerParser;
import com.chaosinmotion.asn1.BerSequence;
import com.chaosinmotion.asn1.Tag;

public class SmvPduParser extends BerParser {

	protected SmvPduParser() {

	}

	public static final SmvPduParser parser = new SmvPduParser();
	public static final int State_smvpdu = State_Start;
	public static final int State_smv91 = 1;
	public static final int State_smv92 = 2;
	public static final int State_smv92SeqOfAsdu = 3;
	public static final int State_smv92Asdu = 4;

	public BerNode create(int tag, BerInputStream stream, int state) {
		switch (state) {
		case State_smvpdu: {
			switch (tag) {
			case Tag.APPLICATION | 0:
				return new BerSequence().init("smv92", "smv92", tag, stream, State_smv92, this);
			case Tag.CONTEXT | 0:
				return new Smv91Pdu().init(tag, stream);
			default:
				return Asn1Utils.createUnknownTagBerNode(tag, stream);
			}
		}
		case State_smv92: {
			switch (tag) {
			case Tag.CONTEXT | 0:
				return Asn1Utils.createBerInteger("number of asdu", "asdu条目数", tag, stream);
			case Tag.CONTEXT | 2:
//				return Asn1Utils.createBerSequenceOf("seq of asdu", "asdu集", tag, stream, Smv92Asdu.class);
				return new BerSequence().init("seqOfAsdu", "asdu集", tag, stream, State_smv92SeqOfAsdu, this);
			default:
				return Asn1Utils.createUnknownTagBerNode(tag, stream);
			}
		}
		case State_smv92SeqOfAsdu: {
			switch (tag) {
			case Tag.UNIVERSAL | 16:
				return new BerSequence().init("asdu", "asdu", tag, stream, State_smv92Asdu, this);
			default:
				return Asn1Utils.createUnknownTagBerNode(tag, stream);
			}
		}
		case State_smv92Asdu: {
			switch (tag) {
			case Tag.CONTEXT | 0:
				return Asn1Utils.createBerVisibleString("svID", "采样值ID", tag, stream);
			case Tag.CONTEXT | 2:
				return Asn1Utils.createBerInteger("sample count", "采样计数", tag, stream);
			case Tag.CONTEXT | 3:
				return Asn1Utils.createBerInteger("confRef", "配置版本", tag, stream);
			case Tag.CONTEXT | 5:
				return Asn1Utils.createBerInteger("sample synch", "采样同步", tag, stream);
			case Tag.CONTEXT | 7:
				return new Smv92AsduData().init(tag, stream);
			default:
				return Asn1Utils.createUnknownTagBerNode(tag, stream);
			}
		}
		default:
			throw new RuntimeException("unknow state");
		}
	}

	public BerNode parseSmv(byte[] data, int offset) {
		ByteArrayInputStream inStream = new ByteArrayInputStream(data);
		BerInputStream in = new BerInputStream(inStream);
		in.setTagOffset(offset);
		try {
			return super.readPacket(in);
		} catch (IOException e) {
			e.printStackTrace();
			return null;
		}
	}

}
